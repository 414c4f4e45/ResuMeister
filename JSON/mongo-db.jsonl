{"question": "What is MongoDB?", "answer": "MongoDB is a NoSQL database that uses a document-oriented data model, allowing for flexible and scalable storage of data."}
{"question": "What is a document in MongoDB?", "answer": "A document in MongoDB is a basic unit of data, represented as a JSON-like structure called BSON (Binary JSON), which can contain nested fields and arrays."}
{"question": "How does MongoDB differ from a relational database?", "answer": "MongoDB differs from relational databases in that it stores data in flexible, schema-less documents rather than fixed schema tables, and it uses a collection-based model instead of tables."}
{"question": "What is a collection in MongoDB?", "answer": "A collection in MongoDB is a grouping of MongoDB documents. It is equivalent to a table in relational databases but does not enforce a schema."}
{"question": "What is a replica set in MongoDB?", "answer": "A replica set in MongoDB is a group of MongoDB servers that maintain the same data set, providing redundancy and high availability."}
{"question": "How does MongoDB handle data replication?", "answer": "MongoDB uses replica sets to handle data replication. A replica set consists of multiple copies of the data stored on different servers, ensuring data redundancy and availability."}
{"question": "What is sharding in MongoDB?", "answer": "Sharding in MongoDB is the process of distributing data across multiple servers to ensure horizontal scalability and to handle large datasets."}
{"question": "How do you create a new database in MongoDB?", "answer": "You create a new database in MongoDB by connecting to the MongoDB instance and using the use <databaseName> command. The database is created when you first store data in it."}
{"question": "What is an index in MongoDB?", "answer": "An index in MongoDB is a data structure that improves the speed of data retrieval operations on a collection by allowing faster queries and efficient sorting."}
{"question": "How do you create an index in MongoDB?", "answer": "Use the db.collection.createIndex({ field: 1 }) method to create an index on a field in a collection. The 1 indicates ascending order."}
{"question": "What is the purpose of the find() method in MongoDB?", "answer": "The find() method is used to retrieve documents from a collection that match specified query criteria."}
{"question": "How do you update a document in MongoDB?", "answer": "Use the db.collection.updateOne({ filter }, { $set: { field: value } }) method to update a single document that matches the filter. Use updateMany() to update multiple documents."}
{"question": "What is the aggregate() method used for in MongoDB?", "answer": "The aggregate() method is used for performing advanced data processing and transformation operations, such as filtering, grouping, and sorting."}
{"question": "How do you delete a document in MongoDB?", "answer": "Use the db.collection.deleteOne({ filter }) method to delete a single document that matches the filter. Use deleteMany() to delete multiple documents."}
{"question": "What is the purpose of the insertOne() method in MongoDB?", "answer": "The insertOne() method is used to insert a single document into a collection."}
{"question": "How do you insert multiple documents into a collection?", "answer": "Use the db.collection.insertMany([{ doc1 }, { doc2 }]) method to insert multiple documents at once."}
{"question": "What is the ObjectId in MongoDB?", "answer": "ObjectId is a unique identifier for documents in MongoDB, automatically generated by MongoDB for each document to ensure uniqueness."}
{"question": "How do you perform a text search in MongoDB?", "answer": "Use the $text operator with the find() method to perform text searches on indexed fields. Ensure a text index is created on the fields to be searched."}
{"question": "What is a MongoDB schema validation?", "answer": "Schema validation in MongoDB allows you to enforce rules on the structure of documents in a collection using validation rules defined in the collection's schema."}
{"question": "How do you define a schema validation rule in MongoDB?", "answer": "Use the collMod command to modify a collection and apply schema validation rules using JSON Schema or validation expressions."}
{"question": "What is the role of the db.collection.stats() method?", "answer": "The db.collection.stats() method provides statistical information about a collection, including size, document count, and index usage."}
{"question": "What is the purpose of the db.serverStatus() command?", "answer": "The db.serverStatus() command provides an overview of the server's status, including metrics related to memory, connections, and operations."}
{"question": "How do you back up data in MongoDB?", "answer": "Use the mongodump command to create a backup of the data in a MongoDB instance. To restore data, use the mongorestore command."}
{"question": "What is the role of the mongod process?", "answer": "The mongod process is the primary server process for MongoDB that handles data storage, querying, and management."}
{"question": "How do you start the MongoDB server?", "answer": "Start the MongoDB server using the mongod command in the terminal."}
{"question": "What is the mongo shell used for?", "answer": "The mongo shell is a command-line interface used to interact with MongoDB instances, perform database operations, and execute JavaScript commands."}
{"question": "How do you connect to a MongoDB instance using the mongo shell?", "answer": "Use the mongo command followed by the connection string, such as mongo mongodb://localhost:27017."}
{"question": "What is a MongoDB aggregation pipeline?", "answer": "An aggregation pipeline is a framework for processing and transforming data in MongoDB, consisting of multiple stages that transform data sequentially."}
{"question": "How do you perform a simple aggregation query?", "answer": "Use the db.collection.aggregate([{ $match: { field: value } }, { $group: { _id: \"$field\", total: { $sum: 1 } } }]) method to perform an aggregation query."}
{"question": "What is a MongoDB cursor?", "answer": "A MongoDB cursor is an object used to iterate over the results of a query, providing methods to access and manipulate the results."}
{"question": "How do you limit the number of documents returned by a query?", "answer": "Use the limit() method with a query to specify the maximum number of documents to return, e.g., db.collection.find().limit(10)."}
{"question": "What is the skip() method used for in MongoDB?", "answer": "The skip() method is used to skip a specified number of documents in the query results, useful for pagination."}
{"question": "How do you sort query results in MongoDB?", "answer": "Use the sort() method with a query to specify the sorting order, e.g., db.collection.find().sort({ field: 1 }) for ascending order."}
{"question": "What is the purpose of the $lookup stage in aggregation?", "answer": "The $lookup stage performs a left outer join with another collection, allowing you to combine documents from different collections."}
{"question": "How do you perform a join operation in MongoDB?", "answer": "Use the $lookup stage in an aggregation pipeline to perform join operations between collections."}
{"question": "What is a capped collection in MongoDB?", "answer": "A capped collection is a special type of collection with a fixed size that automatically overwrites the oldest documents when the size limit is reached."}
{"question": "How do you create a capped collection?", "answer": "Use the db.createCollection() method with the capped and size options, e.g., db.createCollection(\"myCollection\", { capped: true, size: 10000 })."}
{"question": "What is the db.collection.findOne() method used for?", "answer": "The db.collection.findOne() method retrieves a single document that matches the query criteria."}
{"question": "How do you use the distinct() method in MongoDB?", "answer": "Use the distinct() method to retrieve unique values for a specified field from a collection, e.g., db.collection.distinct(\"fieldName\")."}
{"question": "What is the purpose of the $addFields stage in aggregation?", "answer": "The $addFields stage adds new fields to documents or modifies existing fields during aggregation."}
{"question": "How do you use the $project stage in aggregation?", "answer": "The $project stage reshapes documents by including or excluding fields and performing transformations on existing fields."}
{"question": "What is the db.collection.findAndModify() method?", "answer": "The db.collection.findAndModify() method performs an atomic operation that finds and modifies a document in a single operation."}
{"question": "How do you use the $unset operator in an update operation?", "answer": "The $unset operator removes specified fields from a document during an update operation."}
{"question": "What is the purpose of the db.collection.renameCollection() method?", "answer": "The db.collection.renameCollection() method renames an existing collection to a new name."}
{"question": "How do you perform a partial match query in MongoDB?", "answer": "Use regular expressions with the $regex operator to perform partial match queries, e.g., db.collection.find({ field: { $regex: /pattern/ } })."}
{"question": "What is the $geoNear stage in aggregation?", "answer": "The $geoNear stage sorts documents by proximity to a specified geographic point and is used for geospatial queries."}
{"question": "How do you use mongostat?", "answer": "mongostat is a monitoring tool that provides real-time statistics on the status of MongoDB instances, including metrics on operations and connections."}
{"question": "What is the purpose of mongorestore?", "answer": "mongorestore is used to restore data from backup files created with mongodump."}
{"question": "How do you enable authentication in MongoDB?", "answer": "Enable authentication by setting the security.authorization option to enabled in the MongoDB configuration file and creating user accounts with appropriate roles."}
{"question": "How do you create a new user in MongoDB?", "answer": "Use the db.createUser() method to create a new user with specified roles and privileges."}
{"question": "What is the purpose of the db.collection.find().forEach() method?", "answer": "The db.collection.find().forEach() method iterates over the results of a query and executes a specified function for each document."}
{"question": "How do you perform a range query in MongoDB?", "answer": "Use comparison operators such as $gte (greater than or equal) and $lte (less than or equal) to perform range queries."}
{"question": "What is the db.collection.update() method used for?", "answer": "The db.collection.update() method updates documents in a collection that match a specified filter, with optional update operators."}
{"question": "How do you use the $inc operator in an update operation?", "answer": "The $inc operator increments the value of a specified field by a given amount during an update operation."}
{"question": "What is the db.collection.countDocuments() method?", "answer": "The db.collection.countDocuments() method returns the count of documents that match a specified query."}
{"question": "How do you perform a bulk write operation in MongoDB?", "answer": "Use the db.collection.bulkWrite() method to perform multiple write operations in a single request, including inserts, updates, and deletes."}
{"question": "What is the purpose of the db.collection.createIndex() method?", "answer": "The db.collection.createIndex() method creates an index on one or more fields in a collection to improve query performance."}
{"question": "How do you handle missing fields in MongoDB documents?", "answer": "Use the $ifNull operator in aggregation or provide default values in application logic to handle missing fields."}
{"question": "What is the db.collection.find().limit() method used for?", "answer": "The db.collection.find().limit() method limits the number of documents returned by a query to a specified number."}
{"question": "How do you perform a logical query in MongoDB?", "answer": "Use logical operators such as $and, $or, and $not to perform logical queries with multiple conditions."}
{"question": "What is the db.collection.updateMany() method?", "answer": "The db.collection.updateMany() method updates multiple documents that match a specified filter with the provided update."}
{"question": "How do you use the $pull operator in MongoDB?", "answer": "The $pull operator removes specific elements from an array field in documents that match a specified condition."}
{"question": "What is the db.collection.drop() method used for?", "answer": "The db.collection.drop() method removes a collection and its associated indexes from the database."}
{"question": "How do you perform a compound index in MongoDB?", "answer": "Create a compound index by specifying multiple fields in the db.collection.createIndex() method, e.g., db.collection.createIndex({ field1: 1, field2: -1 })."}
{"question": "What is the db.collection.findOneAndUpdate() method?", "answer": "The db.collection.findOneAndUpdate() method finds a single document and updates it in a single atomic operation, returning the original or updated document."}
{"question": "How do you handle transactions in MongoDB?", "answer": "Use multi-document transactions with the session object to perform multiple operations atomically and ensure data consistency."}
{"question": "What is the db.collection.aggregate().$match stage used for?", "answer": "The $match stage filters documents to pass only those that match the specified criteria to the next stage in the aggregation pipeline."}
{"question": "How do you use the $set operator in an update operation?", "answer": "The $set operator updates the value of a specified field or adds a new field if it does not exist."}
{"question": "What is the db.collection.updateMany().$currentDate operator used for?", "answer": "The $currentDate operator updates a field to the current date and time during an update operation."}
{"question": "How do you handle large datasets in MongoDB?", "answer": "Use sharding to distribute large datasets across multiple servers and optimize queries and indexing for efficient data access."}
{"question": "What is the db.collection.find().$exists operator used for?", "answer": "The $exists operator checks for the presence or absence of a field in documents during a query."}
{"question": "How do you use the $replaceRoot stage in aggregation?", "answer": "The $replaceRoot stage replaces the input document with the specified document or expression during aggregation."}
{"question": "What is the db.collection.createIndex({ field: \"text\" }) method used for?", "answer": "It creates a text index on a field to support text search operations using the $text operator."}
{"question": "How do you use the $merge stage in aggregation?", "answer": "The $merge stage writes the results of an aggregation pipeline to a new or existing collection."}
{"question": "What is the db.collection.find().$elemMatch operator used for?", "answer": "The $elemMatch operator matches documents containing an array field with at least one element that matches the specified criteria."}
{"question": "How do you use the $addToSet operator in MongoDB?", "answer": "The $addToSet operator adds a value to an array only if it does not already exist, preventing duplicate entries."}
{"question": "What is the db.collection.find().$or operator used for?", "answer": "The $or operator performs a logical OR operation to match documents that satisfy at least one of the specified conditions."}
{"question": "How do you perform a geospatial query in MongoDB?", "answer": "Use geospatial operators such as $geoWithin, $geoNear, and $near to perform queries based on geographic locations."}
{"question": "What is the db.collection.updateOne() method?", "answer": "The db.collection.updateOne() method updates a single document that matches the specified filter with the provided update."}
{"question": "How do you use the $push operator in MongoDB?", "answer": "The $push operator adds an element to the end of an array field in a document."}
{"question": "What is the db.collection.dropIndexes() method used for?", "answer": "The db.collection.dropIndexes() method removes all indexes from a collection or specific indexes if provided."}
{"question": "How do you use the $count stage in aggregation?", "answer": "The $count stage counts the number of documents that pass through the aggregation pipeline and outputs the count as a field."}
{"question": "What is the db.collection.find().$not operator used for?", "answer": "The $not operator performs a logical NOT operation to match documents that do not satisfy the specified criteria."}
{"question": "How do you use the $group stage in aggregation?", "answer": "The $group stage groups documents by specified fields and performs aggregate operations such as sum, average, or count."}
{"question": "What is the db.collection.find().$regex operator used for?", "answer": "The $regex operator performs pattern matching queries on string fields using regular expressions."}
{"question": "How do you handle schema migrations in MongoDB?", "answer": "Handle schema migrations by updating documents to match the new schema, using tools or scripts to transform data as needed."}
{"question": "What is the db.collection.find().$size operator used for?", "answer": "The $size operator matches documents where an array field has a specified number of elements."}
{"question": "How do you use the $project stage to include specific fields?", "answer": "Use the $project stage to include or exclude specific fields from the documents, e.g., { $project: { field1: 1, field2: 0 } }."}
{"question": "What is the db.collection.createIndex() method used for?", "answer": "The db.collection.createIndex() method creates indexes on fields to improve query performance and support efficient data retrieval."}
{"question": "How do you use the $mergeObjects operator in aggregation?", "answer": "The $mergeObjects operator merges multiple documents into a single document, combining fields from each document."}
{"question": "What is the purpose of the db.collection.getIndexes() method?", "answer": "The db.collection.getIndexes() method retrieves a list of all indexes on a collection."}
{"question": "How do you perform a find operation with a projection in MongoDB?", "answer": "Use the find() method with a projection object to specify which fields to include or exclude in the results."}
{"question": "What is the db.collection.find().$elemMatch operator used for?", "answer": "The $elemMatch operator matches documents that contain an array field with at least one element matching the specified query criteria."}
{"question": "How do you use the $addFields stage in aggregation?", "answer": "The $addFields stage adds new fields or modifies existing fields in documents during the aggregation pipeline."}
{"question": "What is the db.collection.bulkWrite() method used for?", "answer": "The db.collection.bulkWrite() method performs multiple write operations (inserts, updates, deletes) in a single request."}
{"question": "How do you perform a compound query in MongoDB?", "answer": "Use logical operators like $and and $or to combine multiple query conditions for a compound query."}
{"question": "What is the db.collection.find().$in operator used for?", "answer": "The $in operator matches documents where the value of a field is within a specified array of values."}
{"question": "How do you use the $sort stage in aggregation?", "answer": "The $sort stage sorts documents based on specified fields and sort order during the aggregation pipeline."}
{"question": "What is the db.collection.find().$lt operator used for?", "answer": "The $lt operator matches documents where the value of a field is less than a specified value."}
{"question": "How do you use the $lookup stage in aggregation?", "answer": "The $lookup stage performs a left outer join with another collection and includes fields from the joined collection in the results."}
{"question": "What is the db.collection.find().$ne operator used for?", "answer": "The $ne operator matches documents where the value of a field is not equal to a specified value."}
{"question": "How do you use the $limit stage in aggregation?", "answer": "The $limit stage limits the number of documents passed to the next stage in the aggregation pipeline."}
{"question": "What is the db.collection.find().$gt operator used for?", "answer": "The $gt operator matches documents where the value of a field is greater than a specified value."}
{"question": "How do you use the $geoNear stage in aggregation?", "answer": "The $geoNear stage performs a geospatial query that returns documents sorted by proximity to a specified location."}
{"question": "What is the db.collection.updateOne().$rename operator used for?", "answer": "The $rename operator renames a field in a document during an update operation."}
{"question": "How do you use the $unset operator in MongoDB?", "answer": "The $unset operator removes a field from documents during an update operation."}
{"question": "What is the db.collection.find().$exists operator used for?", "answer": "The $exists operator checks whether a field exists or does not exist in documents."}
{"question": "How do you use the $arrayElemAt operator in aggregation?", "answer": "The $arrayElemAt operator returns the element at a specified index in an array field during aggregation."}
{"question": "What is the db.collection.find().$type operator used for?", "answer": "The $type operator matches documents where the value of a field is of a specified BSON data type."}
{"question": "How do you use the $sample stage in aggregation?", "answer": "The $sample stage randomly selects a specified number of documents from the aggregation pipeline."}
{"question": "What is the db.collection.find().$expr operator used for?", "answer": "The $expr operator allows the use of aggregation expressions within queries, enabling more complex conditions."}
{"question": "How do you use the $replaceWith stage in aggregation?", "answer": "The $replaceWith stage replaces the input document with a specified document or expression during aggregation."}
{"question": "What is the db.collection.find().$mod operator used for?", "answer": "The $mod operator performs a modulus operation to match documents based on the remainder of a division."}
{"question": "How do you use the $concat operator in aggregation?", "answer": "The $concat operator concatenates multiple string values into a single string during aggregation."}
{"question": "What is the db.collection.find().$subtract operator used for?", "answer": "The $subtract operator performs a subtraction operation to match documents based on the difference between two values."}
{"question": "How do you use the $add operator in aggregation?", "answer": "The $add operator performs an addition operation to match documents based on the sum of two values during aggregation."}
{"question": "What is the db.collection.find().$multiply operator used for?", "answer": "The $multiply operator performs a multiplication operation to match documents based on the product of two values."}
{"question": "How do you use the $floor operator in aggregation?", "answer": "The $floor operator rounds down numerical values to the nearest integer during aggregation."}
{"question": "What is the db.collection.find().$ceil operator used for?", "answer": "The $ceil operator rounds up numerical values to the nearest integer during aggregation."}
{"question": "How do you use the $dateToString operator in aggregation?", "answer": "The $dateToString operator converts a date or timestamp to a string formatted according to a specified format during aggregation."}
{"question": "What is the db.collection.find().$isoWeek operator used for?", "answer": "The $isoWeek operator extracts the ISO week number from a date or timestamp during aggregation."}
{"question": "How do you use the $dateFromString operator in aggregation?", "answer": "The $dateFromString operator converts a string to a date or timestamp according to a specified format during aggregation."}
{"question": "What is the db.collection.find().$year operator used for?", "answer": "The $year operator extracts the year from a date or timestamp during aggregation."}
{"question": "How do you use the $month operator in aggregation?", "answer": "The $month operator extracts the month from a date or timestamp during aggregation."}
{"question": "What is the db.collection.find().$dayOfWeek operator used for?", "answer": "The $dayOfWeek operator extracts the day of the week from a date or timestamp during aggregation."}
{"question": "How do you use the $dayOfMonth operator in aggregation?", "answer": "The $dayOfMonth operator extracts the day of the month from a date or timestamp during aggregation."}
{"question": "What is the db.collection.find().$hour operator used for?", "answer": "The $hour operator extracts the hour from a date or timestamp during aggregation."}
{"question": "How do you use the $minute operator in aggregation?", "answer": "The $minute operator extracts the minute from a date or timestamp during aggregation."}
{"question": "What is the db.collection.find().$second operator used for?", "answer": "The $second operator extracts the second from a date or timestamp during aggregation."}
{"question": "How do you use the $trim operator in aggregation?", "answer": "The $trim operator removes leading and trailing whitespace from a string during aggregation."}
{"question": "What is the db.collection.find().$split operator used for?", "answer": "The $split operator splits a string into an array of substrings based on a specified delimiter during aggregation."}
{"question": "How do you use the $arrayToObject operator in aggregation?", "answer": "The $arrayToObject operator converts an array of key-value pairs into a document during aggregation."}
{"question": "What is the db.collection.find().$objectToArray operator used for?", "answer": "The $objectToArray operator converts a document into an array of key-value pairs during aggregation."}
{"question": "How do you use the $filter operator in aggregation?", "answer": "The $filter operator filters the elements of an array based on a specified condition during aggregation."}
{"question": "What is the db.collection.find().$reduce operator used for?", "answer": "The $reduce operator applies a function to each element of an array and returns a single value during aggregation."}
{"question": "How do you use the $map operator in aggregation?", "answer": "The $map operator applies a specified expression to each element of an array and returns a new array with the results during aggregation."}
{"question": "What is the db.collection.find().$zip operator used for?", "answer": "The $zip operator combines multiple arrays into an array of arrays during aggregation."}
{"question": "How do you use the $mergeObjects operator in aggregation?", "answer": "The $mergeObjects operator combines multiple documents into a single document, merging their fields during aggregation."}
{"question": "What is the db.collection.find().$literal operator used for?", "answer": "The $literal operator returns the value of an expression as a literal, without evaluating it during aggregation."}
{"question": "How do you use the $ifNull operator in aggregation?", "answer": "The $ifNull operator returns a specified value if the input is null or missing during aggregation."}
{"question": "What is the db.collection.find().$cond operator used for?", "answer": "The $cond operator evaluates a condition and returns one of two values based on whether the condition is true or false during aggregation."}
{"question": "How do you use the $switch operator in aggregation?", "answer": "The $switch operator evaluates multiple conditions and returns the corresponding value for the first condition that is true during aggregation."}
{"question": "What is the db.collection.find().$let operator used for?", "answer": "The $let operator defines variables within an aggregation expression and uses them in subsequent expressions."}
{"question": "How do you use the $map operator in aggregation?", "answer": "The $map operator applies a specified transformation to each element of an array and returns a new array with the transformed elements."}
{"question": "What is the db.collection.find().$reduce operator used for?", "answer": "The $reduce operator processes an array and applies a function to each element to return a single value."}
{"question": "How do you use the $objectToArray operator in aggregation?", "answer": "The $objectToArray operator converts a document into an array of key-value pairs during aggregation."}
{"question": "What is the db.collection.find().$arrayToObject operator used for?", "answer": "The $arrayToObject operator converts an array of key-value pairs into a document during aggregation."}
{"question": "How do you use the $first operator in aggregation?", "answer": "The $first operator returns the first element of a group or array during aggregation."}
{"question": "What is the db.collection.find().$last operator used for?", "answer": "The $last operator returns the last element of a group or array during aggregation."}
{"question": "How do you use the $last operator in aggregation?", "answer": "The $last operator returns the last element of an array or group of documents during aggregation."}
{"question": "What is the db.collection.find().$count operator used for?", "answer": "The $count operator returns the count of documents that pass through the aggregation pipeline."}
{"question": "How do you use the $sort stage in aggregation?", "answer": "The $sort stage sorts documents in the aggregation pipeline based on specified fields and sort orders."}
{"question": "What is the db.collection.find().$addToSet operator used for?", "answer": "The $addToSet operator adds unique values to an array field during an update operation."}
{"question": "How do you use the $push operator in MongoDB?", "answer": "The $push operator appends values to an array field during an update operation."}
{"question": "What is the db.collection.find().$pull operator used for?", "answer": "The $pull operator removes all instances of a value from an array field during an update operation."}
{"question": "How do you use the $inc operator in MongoDB?", "answer": "The $inc operator increments a field's value by a specified amount during an update operation."}
{"question": "What is the db.collection.find().$set operator used for?", "answer": "The $set operator sets the value of a field in a document during an update operation."}
{"question": "How do you use the $currentDate operator in MongoDB?", "answer": "The $currentDate operator sets the value of a field to the current date or timestamp during an update operation."}
{"question": "What is the db.collection.find().$rename operator used for?", "answer": "The $rename operator renames a field in a document during an update operation."}
{"question": "How do you use the $unset operator in MongoDB?", "answer": "The $unset operator removes a field from a document during an update operation."}
{"question": "What is the db.collection.find().$push operator used for?", "answer": "The $push operator appends values to an array field during an update operation."}
{"question": "How do you use the $pull operator in MongoDB?", "answer": "The $pull operator removes values from an array field based on a specified condition during an update operation."}
{"question": "What is the db.collection.find().$inc operator used for?", "answer": "The $inc operator increments the value of a numeric field by a specified amount during an update operation."}
{"question": "How do you use the $min operator in MongoDB?", "answer": "The $min operator updates a field to the minimum value between its current value and a specified value during an update operation."}
{"question": "What is the db.collection.find().$max operator used for?", "answer": "The $max operator updates a field to the maximum value between its current value and a specified value during an update operation."}
{"question": "How do you use the $mul operator in MongoDB?", "answer": "The $mul operator multiplies the value of a field by a specified amount during an update operation."}
{"question": "What is the db.collection.find().$currentDate operator used for?", "answer": "The $currentDate operator sets the value of a field to the current date or timestamp during an update operation."}
{"question": "How do you use the $setOnInsert operator in MongoDB?", "answer": "The $setOnInsert operator sets the value of a field if a new document is inserted during an update operation."}
{"question": "What is the db.collection.find().$pop operator used for?", "answer": "The $pop operator removes the first or last element of an array field during an update operation."}
